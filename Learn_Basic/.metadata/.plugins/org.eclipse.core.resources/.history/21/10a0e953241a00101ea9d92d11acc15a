package src.com.realTimeExample;

import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class SortMapDemo {
    public static void main(String[] args) {
        Map<String, Integer> map = new HashMap<>();
        map.put("Apple", 10);
        map.put("Banana", 15);
        map.put("Cherry", 20);
        map.put("Date", 25);
        map.put("Elderberry", 30);
        map.put("Fig", 35);
        map.put("Grapes", 40);
        map.put("Honeydew", 45);
        map.put("Jackfruit", 50);
        map.put("Kiwi", 55);
        map.put("Lemon", 60);
        map.put("Mango", 65);
        map.put("Nectarine", 70);
        map.put("Orange", 75);
        map.put("Papaya", 80);
        map.put("Quince", 85);
        map.put("Raspberry", 90);
        map.put("Strawberry", 95);
        map.put("Tomato", 100);
        map.put("UgliFruit", 105);

        // Sorting by keys (descending)
        System.out.println("Sorted by keys:");
        map.entrySet().stream()
            .sorted((a, b) -> b.getKey().compareTo(a.getKey()))
            .forEach(System.out::println);

        System.out.println("\nSorted by values (ascending):");
        map.entrySet().stream()
            .sorted(Comparator.comparingInt(Map.Entry::getValue).reversed())
            .forEach(System.out::println);

        System.out.println("\nSorted by values (descending):");
        map.entrySet().stream()
            .sorted(Comparator.<Map.Entry<String, Integer>, Integer>comparing(Map.Entry::getValue).reversed())
            .forEach(System.out::println);
        // If you want to store it in a sorted map:
        LinkedHashMap<String, Integer> sortedByValue = map.entrySet().stream()
            .sorted(Map.Entry.comparingByValue())
            .collect(Collectors.toMap(
                Map.Entry::getKey, Map.Entry::getValue,
                (e1, e2) -> e1, LinkedHashMap::new
            ));

        System.out.println("\nStored sorted map:");
        sortedByValue.forEach((key, value) -> System.out.println(key + " -> " + value));
    }
}
